{"version":3,"sources":["components/Todo/InputTodo.js","components/Todo/TodoItem.js","components/Todo/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["InputTodo","onCreate","useState","value","setValue","className","onSubmit","event","preventDefault","trim","onChange","target","type","TodoItem","todo","index","onClick","removeItem","condition","completed","push","join","checked","id","title","TodoList","props","todos","map","onToggle","App","React","setTodos","concat","Date","now","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA4BeA,MA1Bf,YAAkC,IAAbC,EAAY,EAAZA,SAAY,EACLC,mBAAS,IADJ,mBACxBC,EADwB,KACjBC,EADiB,KAW/B,OACE,uBAAMC,UAAU,aAAaC,SAT/B,SAAuBC,GACrBA,EAAMC,iBACFL,EAAMM,OACRR,EAASE,GACTC,EAAS,MAKX,UACE,uBACED,MAAOA,EACPO,SAAU,SAACH,GAAD,OAAWH,EAASG,EAAMI,OAAOR,QAC3CE,UAAU,mBACVO,KAAK,SAEP,wBAAQP,UAAU,qBAAqBO,KAAK,SAA5C,qBCKSC,MAxBf,YAAyD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAEpCC,EAAY,GAIhB,OAFIJ,EAAKK,WAAWD,EAAUE,KAAK,qBAGjC,qBAAIf,UAAU,YAAd,UACE,uBAAMA,UAAWa,EAAUG,KAAK,KAAhC,UACE,uBACEhB,UAAU,mBACVO,KAAK,WACLU,QAASR,EAAKK,UACdT,SAAU,kBAAMM,EAAQF,EAAKS,OAE/B,mCAASR,EAAQ,EAAjB,OAPF,OASGD,EAAKU,SAER,wBAAQnB,UAAU,wBAAwBW,QAAS,WAAKC,EAAWH,EAAKS,KAAxE,sBCASE,MAlBf,SAAkBC,GAChB,OACE,oBAAIrB,UAAU,YAAd,SACGqB,EAAMC,MAAMC,KAAI,SAACd,EAAMC,GACtB,OACE,cAAC,EAAD,CACED,KAAMA,EAENC,MAAOA,EACPC,QAASU,EAAMG,SACfZ,WAAcS,EAAMT,YAHfH,EAAKS,UCuCPO,MA5Cf,WAAgB,IAAD,EACaC,IAAM7B,SAAS,CACvC,CAAEqB,GAAI,EAAGJ,WAAW,EAAOK,MAAO,kBAClC,CAAED,GAAI,EAAGJ,WAAW,EAAOK,MAAO,kBAClC,CAAED,GAAI,EAAGJ,WAAW,EAAOK,MAAO,oBAJvB,mBACNG,EADM,KACCK,EADD,KA+Bb,OACE,sBAAK3B,UAAU,UAAf,UACE,2CACA,cAAC,EAAD,CAAWJ,SAXf,SAAkBuB,GAChBQ,EAASL,EAAMM,OAAO,CAAC,CACrBT,MAAOA,EACPD,GAAIW,KAAKC,MACThB,WAAW,SAQX,cAAC,EAAD,CACEQ,MAAOA,EACPE,SA9BN,SAAsBN,GACpBS,EACEL,EAAMC,KAAI,SAACd,GAIT,OAHIA,EAAKS,KAAOA,IACdT,EAAKK,WAAaL,EAAKK,WAElBL,OAyBPG,WApBN,SAAwBM,GAEtB,OADAS,EAASL,EAAMS,QAAO,SAACtB,GAAD,OAAUA,EAAKS,KAAOA,MACrCI,SCbIU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef0aeb8d.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction InputTodo({ onCreate }) {\n  const [value, setValue] = useState('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n    if (value.trim) {\n      onCreate(value);\n      setValue('');\n    }\n  }\n\n  return (\n    <form className='input-todo' onSubmit={submitHandler}>\n      <input\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n        className='input-todo__text'\n        type='text'\n      />\n      <button className='input-todo__submit' type='submit'>\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default InputTodo;\n","import React from 'react';\n\nfunction TodoItem({ todo, index, onClick, removeItem }) {\n  //there we take some fields from props which is default\n  let condition = [];\n\n  if (todo.completed) condition.push('todo-item-checked');\n\n  return (\n    <li className='todo-item'>\n      <span className={condition.join(' ')}>\n        <input\n          className='todo-item__check'\n          type='checkbox'\n          checked={todo.completed}\n          onChange={() => onClick(todo.id)}\n        />\n        <strong>{index + 1})</strong>\n        &nbsp;\n        {todo.title}\n      </span>\n      <button className='todo-item__btn-remove' onClick={()=>{removeItem(todo.id)}}>&times;</button>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nfunction TodoList(props) {\n  return (\n    <ul className=\"todo-list\">\n      {props.todos.map((todo, index) => {\n        return (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            index={index}\n            onClick={props.onToggle}\n            removeItem = {props.removeItem}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport InputTodo from './components/Todo/InputTodo';\nimport TodoList from './components/Todo/TodoList';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    { id: 1, completed: false, title: 'Buy some shit1' },\n    { id: 2, completed: false, title: 'Buy some shit2' },\n    { id: 3, completed: false, title: 'Buy some shit3' },\n  ]);\n\n  function onToggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeListItem(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n    return todos;\n  }\n\n  function onCreate(title) {\n    setTodos(todos.concat([{\n      title: title,\n      id: Date.now(),\n      completed: false,\n    }]));\n  }\n\n  return (\n    <div className='wrapper'>\n      <h1>Todo list</h1>\n      <InputTodo onCreate={onCreate}/>\n      <TodoList\n        todos={todos}\n        onToggle={onToggleTodo}\n        removeItem={removeListItem}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}